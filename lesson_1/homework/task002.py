# B. Футбольный комментатор
# Раунд плей-офф между двумя командами состоит из двух матчей. Каждая команда проводит по одному матчу «дома» и «в
# гостях». Выигрывает команда, забившая большее число мячей. Если же число забитых мячей совпадает, выигрывает команд,
# забившая больше мячей «в гостях». Если и это число мячей совпадает, матч переходит в дополнительный тайм или серию
# пенальти.
# Вам дан счёт первого матча, а также счёт текущей игры (которая ещё не завершилась). Помогите комментатору сообщить,
# сколько голов необходимо забить первой команде, чтобы победить, не переводя игру в дополнительное время.
# Формат ввода
# В первой строке записан счёт первого мачта в формате G1:G2, где G1 "— число мячей, забитых первой командой, а G2 "—
# число мячей, забитых второй командой. Во второй строке записан счёт второго (текущего) матча в аналогичном формате.
# Все числа в записи счёта не превышают 5.
# В третьей строке записано число 1, если первую игру первая команда провела «дома», или 2, если «в гостях».
# Формат вывода
# Выведите единственное целое число "— необходимое количество мячей.
# Пример 1
# Ввод
# 0:0
# 0:0
# 1
# Вывод
# 1
# Пример 2
# Ввод
# 0:2
# 0:3
# 1
# Вывод
# 5
# Пример 3
# Ввод
# 0:2
# 0:3
# 2
# Вывод
# 6
def goals_to_win(first_match_score, current_match_score, location):
    g1, g2 = map(int, first_match_score.split(':'))
    g3, g4 = map(int, current_match_score.split(':'))
    if 0 <= g1 <= 5 and 0 <= g2 <= 5 and 0 <= g3 <= 5 and 0 <= g4 <= 5:
        # Проверка на ничейный счет
        if g1 == g2 == 0 and g3 == g4 == 0:
            return 1
        # ветвление пошло по условию игры первой команды в первом матче дома
        elif location == 1:
            # Проверка на ничейный счет
            if g1 == g2 != 0 and g3 == g4:
                return 1
            # Проверка на превосходство счета первой команды
            if g1 + g3 > g4 + g2:
                return 0
            elif g2 < g4 and g3 > g2 and g3 == g4:
                return g4 + g2 - g1 - g3
            # аналогично если меньше и еще если первая команда не играет в ничью во втором матче, только еще +1
            elif g2 > g4 and g2 == g3:
                return g4 + g2 - g1 - g3 + 1
            elif g2 > g4 and g1 == g3 == g4 == 0:
                return g4 + g2 - g1 - g3 + 1
            # аналогично если меньше и еще если первая команда играет в ничью во втором матче, только без +1
            elif g2 > g4 and g2 > g3 and g1 == 0:
                return g4 + g2 - g1 - g3
            elif g2 > g4 and g2 > g3 and g1 == g3:
                return g4 + g2 - g1 - g3 + 1
            elif g2 > g4 and g2 > g3 and g1 == g4:
                return g4 + g2 - g1 - g3 + 1
            elif g2 > g4 and g2 > g3 == g4:
                return g4 + g2 - g1 - g3 + 1
            # Проверка сколько нужно забить 1ой команде для победы из условия,
            # что в гостях вторая команда забила меньше либо равно
            elif g2 <= g4:
                return g4 + g2 - g1 - g3
        # ветвление пошло по условию игры первой команды в первом матче в гостях
        elif location == 2:
            # Проверка на ничейный счет
            if g1 == g2 and g3 == g4 != 0:
                return 1
            # Проверка на превосходство счета первой команды
            if g1 + g3 > g4 + g2:
                return 0
            elif g2 == g4 and g1 > g4:
                return g4 + g2 - g1 - g3
            # Проверка сколько нужно забить 1ой команде для победы из условия, что в гостях вторая команда забила больше
            # 1: 1 # 0: 1 # 2 # 2
            elif g4 >= g2:
                return g4 + g2 - g1 - g3 + 1
            # 1: 1 # 0: 2# 2 # 3
            elif g4 > g2 and g1 == g2:
                return g4 + g2 - g1 - g3 + 1

            # аналогично если меньше, только еще +1
            # 0: 2# 1: 1# 2## 3   # 1: 2  # 0: 1 # 2 ## 3
            elif g2 > g4 >= g1:
                return g4 + g2 - g1 - g3 + 1
            # 2:2# 0:1# 2 # # 1
            elif g4 < g2 and g1 > g4:
                return g4 + g2 - g1 - g3
    else:
        return -1


# Считывание ввода
first_match_score = input().strip()
current_match_score = input().strip()
location = int(input().strip())

# Вызов функции
result = goals_to_win(first_match_score, current_match_score, location)

# Вывод
print(result)

# на 5ом завал в task002_2 решение
