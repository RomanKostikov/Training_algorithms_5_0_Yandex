# I. Расписание
#
# Как же Илье надоело учиться! Сначала школа, потом университет... Вот, наконец, наступил тот долгожданный день,
# когда Илье утром не надо ехать на учебу. Но, к несчастью для Ильи, оказалось, что после окончания университета
# начинается самое трудное — надо устраиваться на работу.
# Во всемирно известной фирме «Goondex», в которую устроился Илья, принято очень много работать, в частности, для
# сотрудников установлена шестидневная рабочая неделя. Но, в качестве бонуса, «Goondex» каждый год предлагает своим
# сотрудникам выбрать любой день недели в качестве выходного. В свою очередь, оставшиеся шесть дней недели будут рабочими.
# Илья сообразил, что с учётом государственных праздников (которые всегда являются выходными) с помощью правильного
# выбора выходного дня недели можно варьировать количество рабочих дней в году. Теперь он хочет знать, какой день
# недели ему следует выбрать в качестве выходного, чтобы отдыхать как можно больше дней в году, или, наоборот,
# демонстрировать чудеса трудолюбия, работая по максимуму.
# Формат ввода
# В первой строке входных данных находится одно целое число N (0 ≤ N ≤ 366) — количество государственных праздников.
# Во второй строке содержится одно целое число year (1800 ≤ year ≤ 2100) — год, в который необходимо помочь Илье.
# В каждой из последующих N строк расположено по паре чисел day month (day — целое число, month — слово, между day и
# month ровно один пробел), обозначающих, что день day месяца month является государственным праздником.
# В последней строке расположено слово  — день недели первого января в год year.
# Гарантируется, что все даты указаны корректно (в том числе указанный день недели первого января действительно является
# днём недели первого января соответствующего года year) и все дни государственных праздников различны.
# Формат вывода
# Выведите через пробел два дня недели — лучший и худший варианты дней недели для выходного (то есть дни недели,
# для которых достигается соответственно максимальное и минимальное количество выходных дней в году). Если возможных
# вариантов ответа несколько, выведите любой из них.

# Пример 1
# Ввод
# 2
# 2015
# 1 January
# 8 January
# Thursday
# Вывод
# Monday Thursday
# Пример 2
# Ввод
# 3
# 2013
# 1 January
# 8 January
# 15 January
# Tuesday
# Вывод
# Monday Tuesday
# Пример 3
# Ввод	Вывод
# 3
# 2013
# 6 February
# 13 February
# 20 February
# Tuesday
# Вывод
# Tuesday Wednesday
# Примечания
# Рассмотрим подробно третий пример.
# 2013 год начинается и заканчивается во вторник (Tuesday), при этом на вторник приходится 53 дня года, а на все
# остальные дни недели –— по 52 дня. Все три государственных праздника выпадают на среду (Wednesday).
# Если Илья выберет в качестве выходного дня вторник, то в году у него будет 53 + 3 = 56 выходных дней
# (53 вторника и 3 государственных праздника). Если Илья выберет в качестве выходного дня среду, то у него будет
# только 52 выходных дня. Если же Илья выберет в качестве выходного дня любой другой день недели, то у него
# будет 52 + 3 = 55 выходных дней.
# Таким образом, лучший вариант для выходного дня — вторник, худший — среда, и единственным правильным ответом в
# данном примере является Tuesday Wednesday.
# Соответствие названий месяцев и дней недели в английском и русском языках:

import calendar

# Ввод данных
n = int(input())
year = int(input())
holidays = [input().split() for _ in range(n)]
first_day_of_year = input()

# Словарь для соответствия месяцев на русском и английском
months_translation = {'January': 'января', 'February': 'февраля', 'March': 'марта', 'April': 'апреля', 'May': 'мая',
                      'June': 'июня', 'July': 'июля', 'August': 'августа', 'September': 'сентября',
                      'October': 'октября',
                      'November': 'ноября', 'December': 'декабря'}

# Определение дней недели первого января
days_of_week = list(calendar.day_name)
start_day_index = days_of_week.index(first_day_of_year)

# Определение количества дней в году для каждого дня недели
days_in_year = {d: 52 for d in days_of_week}  # все дни по умолчанию имеют 52 рабочих дня
days_in_year[first_day_of_year] += 1  # добавляем дополнительный день для первого дня года

# Определение количества выходных дней для каждого варианта выходного
weekend_options = {day: days_in_year[day] - len([1 for d, m in holidays if
                                                 calendar.day_name[calendar.weekday(year, list(
                                                     months_translation.keys()).index(m) + 1, int(d))] == day])
                   for day in days_of_week}

# Вывод результата
best_option = min(weekend_options, key=weekend_options.get)
worst_option = max(weekend_options, key=weekend_options.get)

print(worst_option, best_option)

# ok
