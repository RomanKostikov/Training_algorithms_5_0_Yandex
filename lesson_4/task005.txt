#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>

using namespace std;

#define ULL unsigned long long

bool test(ULL tmp, ULL N)
{
    return ((1 + tmp) * tmp) / 2 >= N;
}

ULL search(ULL N)
{
    ULL l = 1;
    ULL r = 10'000'000'000;
    ULL mid = 0;

    while (l < r)
    {
        mid = (l + r) / 2; // считываем срединный индекс отрезка [l,r]

        if (test(mid, N))
            r = mid; // проверяем, какую часть нужно отбросить с поиска
        else
            l = mid + 1;
    }

    return --r;
}

int main()
{
    string input;

    getline(cin, input);
    ULL N = stoull(input);

    ULL diag = search(N) + 1; // номер диагонали

    if (diag % 2 == 0)
    {
        // четные диагонали идут вверх
        ULL tmp = ((diag) * (diag - 1)) / 2; // верхняя граница
        N -= tmp; // получили индекс в диагонали

        cout << (diag - N + 1) << "/" << N << endl;

    }
    else
    {
        // нечетные диагонали идут вниз
        ULL tmp = ((diag) * (diag - 1)) / 2; // верхняя граница
        N -= tmp; // получили индекс в диагонали

        cout << N << "/" << (diag - N + 1) << endl;
    }



    /*


1
1/1

6
3/1

2
2/1



    */

    return 0;
}