# F. Замена слов
# Ограничение времени	1 секунда
# Ограничение памяти	64Mb
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt
# С целью экономии чернил в картридже принтера было принято решение укоротить некоторые слова в тексте.
# Для этого был составлен словарь слов, до которых можно сокращать более длинные слова. Слово из текста можно
# сократить, если в словаре найдется слово, являющееся началом слова из текста. Например, если в списке есть
# слово "лом", то слова из текста "ломбард", "ломоносов" и другие слова, начинающиеся на "лом", можно сократить до "лом".
#
# Если слово из текста можно сократить до нескольких слов из словаря, то следует сокращать его до самого короткого слова.
#
# Формат ввода
# В первой строке через пробел вводятся слова из словаря, слова состоят из маленьких латинских букв. Гарантируется,
# что словарь не пуст и количество слов в словаре не превышет 1000, а длина слов — 100 символов.
#
# Во второй строке через пробел вводятся слова текста (они также состоят только из маленьких латинских букв).
# Количество слов в тексте не превосходит 105, а суммарное количество букв в них — 106.
#
# Формат вывода
# Выведите текст, в котором осуществлены замены.
#
# Пример 1
# Ввод
# a b
# abdafb basrt casds dsasa a
# Вывод
# a b casds dsasa a
# Пример 2
# Ввод
# aa bc aaa
# a aa aaa bcd abcd
# Вывод
# a aa aa bc abcd
with open('./input.txt') as f:
    dict_set = {i for i in f.readline().split()}
    text = f.readline().split()

max_len_in_dict = 0
for i in dict_set:
    if len(i) > max_len_in_dict:
        max_len_in_dict = len(i)

for i in range(len(text)):
    len_word = len(text[i])
    shorter_len = min(len_word, max_len_in_dict)
    for j in range(shorter_len):
        if text[i][:j + 1] in dict_set:
            text[i] = text[i][:j + 1]
            break

print(' '.join(text))
# python- ok, C++ - ok
